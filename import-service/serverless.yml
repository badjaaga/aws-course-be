service: import-service
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs16.x
  stage: dev
  region: eu-west-1

  apiGateway:
    minimumCompressionSize: 1024
    shouldStartNameWithService: true
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action: "s3:ListBucket"
          Resource:
            - "arn:aws:s3:::cars-bucket-aws"
        - Effect: "Allow"
          Action: "s3:*"
          Resource:
            - "arn:aws:s3:::cars-bucket-aws/*"
        - Effect: "Allow"
          Action: "sqs:*"
          Resource: "arn:aws:sqs:eu-west-1:877317193743:cars-service-que"

plugins:
  - serverless-webpack
  - serverless-dotenv-plugin
  - serverless-offline

custom:
  webpack:
    webpackConfig: "webpack.config.js"
    includeModules: true

resources:
  Resources:
    GatewayResponseDenied:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: ACCESS_DENIED
        RestApiId:
          Ref: 'ApiGatewayRestApi'
    GatewayResponseUnauthorized:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: UNAUTHORIZED
        RestApiId:
          Ref: 'ApiGatewayRestApi'
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'
    GatewayResponseDefault5XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_5XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'

functions:
  importProductsFile:
    handler: handler.importProductsFile
    events:
      - http:
          method: GET
          path: import
          request:
            parameters:
              querystrings:
                name: true
          cors:
            origin: "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false

  importFileParser:
    handler: handler.importFileParser
    events:
      - s3:
          bucket: "cars-bucket-aws"
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true

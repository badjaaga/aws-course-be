service: import-service
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs16.x
  stage: dev
  region: ${env:REGION}

  apiGateway:
    minimumCompressionSize: 1024
    shouldStartNameWithService: true
  environment:
    REGION: ${env:REGION}
    IMPORT_BUCKET_ARN: ${env:IMPORT_BUCKET_ARN}
    AWS_ACCOUNT_ID:
      Ref: AWS::AccountId
    SQS_URL: ${env:SQS_URL}
  iamRoleStatements:
    - Effect: "Allow"
      Action: "s3:ListBucket"
      Resource:
        - ${env:IMPORT_BUCKET_ARN}
    - Effect: "Allow"
      Action: "s3:*"
      Resource:
        - ${env:IMPORT_BUCKET_ARN}/*
    - Effect: "Allow"
      Action: "sqs:*"
      Resource: ${env:SQS_ARN}

plugins:
  - serverless-webpack
  - serverless-dotenv-plugin
  - serverless-offline

custom:
  webpack:
    webpackConfig: "webpack.config.js"
    includeModules: true

resources:
  Resources:
    GatewayResponseDenied:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: ACCESS_DENIED
        RestApiId:
          Ref: 'ApiGatewayRestApi'
    GatewayResponseUnauthorized:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: UNAUTHORIZED
        RestApiId:
          Ref: 'ApiGatewayRestApi'
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'
    GatewayResponseDefault5XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_5XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'

functions:
  importProductsFile:
    handler: handler.importProductsFile
    events:
      - http:
          method: GET
          path: import
          request:
            parameters:
              querystrings:
                name: true
          cors: true

  importFileParser:
    handler: handler.importFileParser
    events:
      - s3:
          bucket: ${env:IMPORT_BUCKET_NAME}
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true
